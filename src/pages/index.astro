---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";

import Layout from "../layouts/Layout.astro";
import PlatformActions from "../components/PlatformActions.astro";
import EpisodeCard from "../components/EpisodeCard.astro";
import Footer from "../components/Footer.astro";

import logo from "../assets/images/logo-with-text.svg";

const hosts = await getCollection("hosts");
const episodes = await getCollection("episodes");
episodes.sort((a, b) => b.data.number - a.data.number);

const latestEpisode = (episodes ?? []).shift();
---

<Layout
  title="Front-End Fire - A weekly front-end news podcast"
  description="A weekly podcast that helps you stay up to date on the front-end world"
>
  <header>
    <Image src={logo} alt="Front-End Fire Logo" class="logo" />
    <h1 class="sr-only">Front-End Fire</h1>
    <p class="tagline">
      A weekly podcast that helps you stay up to date on the front-end world.
    </p>
    <p class="byline">
      Hosted by
      {
        hosts.map((host, index, arr) => (
          <span>
          {index === arr.length - 1 ? "and " : ""}
            <a href="/about">{host.data.name}</a><!--
            -->{index < arr.length - 1 ? ", " : ""}
          </span>
        ))
      }. 
    </p>
    <div class="subscribe-bar">
      <PlatformActions />
    </div>
  </header>
  <main>
    {
      latestEpisode && (
        <div class="latest-episode">
          <EpisodeCard episode={latestEpisode} showClip={false} />
          {latestEpisode.data.audio && (
            <audio controls src={latestEpisode.data.audio} />
          )}
        </div>
      )
    }

    <h2 class="section-heading">More Episodes</h2>
    <div class="past-episodes">
      {episodes.map((entry) => <EpisodeCard episode={entry} />)}
    </div>
  </main>

  <Footer />
</Layout>

<style>
  header {
    padding: 1em;
    background: #3d3c40 linear-gradient(#161619, #3d3c40);
    color: var(--off-white);
  }
  header > * {
    max-width: 53rem;
    margin-left: auto;
    margin-right: auto;
  }

  audio {
    width: 25rem;
    max-width: 100%;
    margin-top: 0.25em;
  }

  audio::-webkit-media-controls-enclosure {
    background: var(--primary-color);
    border-radius: 4px;
  }

  .logo,
  .tagline,
  .subscribe-bar {
    display: block;
    width: var(--content-width);
    max-width: var(--max-width);
    margin: 0.25rem auto;
  }

  .byline,
  .subscribe-bar {
    margin-top: 1em;
    text-align: center;
  }

  .byline {
    a:visited {
      color: var(--primary-color)
    }

    /* This is meant to prevent odd line breaks. "and TJ VanToll" should break to new line, not "VanToll" */
    > span {
      display: inline-block;
    }
    
    > span + span {
      margin-left: 0.35em;
    }
  }

  .logo {
    height: auto;
  }

  .tagline {
    font-size: clamp(1.25rem, 4vw, 2.625rem);
    line-height: 1.25;
    font-weight: 200;
  }

  .latest-episode {
    max-width: 40em;
    margin: 2em auto;
    padding: 0.25em 0.75em;
    box-shadow: 0 0 3px var(--primary-color-dark);
    border-radius: 4px;
    font-size: 1.25em;
  }

  .past-episodes {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(min(100%, 20em), 1fr));
    grid-gap: 4rem;
    margin: 2rem 0;
  }
</style>
