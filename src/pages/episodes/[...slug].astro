---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";

import Layout from "../../layouts/Layout.astro";
import Footer from "../../components/Footer.astro";

import emailIcon from "../../assets/images/email-icon.svg";
import facebookIcon from "../../assets/images/facebook-icon.svg";
import linkIcon from "../../assets/images/link-icon.svg";
import youtubeIcon from "../../assets/images/youtube-icon.svg";
import appleIcon from "../../assets/images/apple-icon.svg";
import spotifyIcon from "../../assets/images/spotify-icon.svg";
import xIcon from "../../assets/images/x-icon.svg";
import { getEntries } from "astro:content";

export async function getStaticPaths() {
  const entries = await getCollection("episodes");
  entries.sort((a, b) => a.data.number - b.data.number);

  return entries.map((episode, index, arr) => ({
    params: { slug: episode.data.number },
    props: { episode, previous: arr[index - 1], next: arr[index + 1] }
  }));
}

const { episode, previous, next } = Astro.props;
const title = `${episode.data.number}: ${episode.data.title} | Front-End Fire`;
const description = episode.data.teaser || episode.data.description.substring(0, 200) + "...";
// TODO: Bring back the hosts and guests
// const hosts = await getEntries(episode.data.hosts);
---

<Layout title={title} description={description}>
  <header class="episode-header">
    <div class="episode-header-content">

      <div class="episode-title-section">
        <div class="episode-number-display">
          <span class="episode-number">Episode {episode.data.number}</span>
        </div>
        <h1 class="episode-title">{episode.data.title}</h1>
        <div class="header-accent"></div>
      </div>
    </div>
  </header>

  <main>
    <div class="episode-content">
      <time datetime={episode.data.date.toISOString()} class="episode-date">
        {
          episode.data.date.toLocaleDateString("en-US", {
            year: "numeric",
            month: "long",
            day: "numeric"
          })
        }
      </time>

      {
        episode.data.teaser && (
          <p class="episode-teaser">{episode.data.teaser}</p>
        )
      }

      {episode.data.audio && <audio controls src={episode.data.audio} />}
    </div>

    <div class="episode-sidebar">
      <div class="listen-section">
        <h3 class="section-heading">Listen</h3>
        <div class="listen-links">
          {
            episode.data.youtube && (
              <a href={episode.data.youtube} target="_blank" title="Listen on YouTube">
                <Image src={youtubeIcon} alt="YouTube" />
                <span>YouTube</span>
              </a>
            )
          }
          {
            episode.data.apple && (
              <a href={episode.data.apple} target="_blank" title="Listen on Apple Podcasts">
                <Image src={appleIcon} alt="Apple Podcasts" />
                <span>Apple</span>
              </a>
            )
          }
          {
            episode.data.spotify && (
              <a href={episode.data.spotify} target="_blank" title="Listen on Spotify">
                <Image src={spotifyIcon} alt="Spotify" />
                <span>Spotify</span>
              </a>
            )
          }
        </div>
      </div>

      <div class="share-section">
        <h3 class="section-heading">Share</h3>
        <div class="share-actions">
          <a
            title="Share via email"
            href={`mailto:?subject=${encodeURIComponent(episode.data.title)}&body=Check out this episode from the Front-End Fire podcast%0D%0A%0D%0AApple Podcasts:%0D%0A${encodeURIComponent(episode.data.apple)}%0D%0A%0D%0ASpotify:%0D%0A${encodeURIComponent(episode.data.spotify)}`}
          >
            <Image src={emailIcon} alt="Share via email" />
            <span>Share via email</span>
          </a>
          <a
            title="Share on Facebook"
            target="_blank"
            href={`https://www.facebook.com/sharer/sharer.php?u=${episode.data.spotify}`}
          >
            <Image src={facebookIcon} alt="Share on Facebook" />
            <span>Facebook</span>
          </a>
          <a
            title="Share on X"
            target="_blank"
            href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(episode.data.title)}%0D%0A${encodeURIComponent(episode.data.spotify)}`}
          >
            <Image src={xIcon} alt="Share on X" />
            <span>Share on X</span>
          </a>
          <button
            title="Copy Episode Link"
            popovertarget="copied-popover"
            class="copy-episode-link-action"
            type="button"
          >
            <Image src={linkIcon} alt="Copy Episode Link" />
            <span>Share Link</span>
          </button>
          <div popover id="copied-popover">Copied!</div>
        </div>
      </div>
    </div>

    <div class="episode-extras">
      <h2 class="section-heading">Full Description</h2>
      <p class="episode-description">
        {episode.data.description}
      </p>

      <h2 class="section-heading">Links</h2>
      <ul class="episode-links">
        {
          episode.data.links.map((link) => (
            <li>
              <a href={link.url} target="_blank">
                {link.text}
              </a>
            </li>
          ))
        }
      </ul>
    </div>

    <nav class="episode-nav">
      {
        previous && (
          <a
            href={"/episodes/" + previous.data.number}
            class="previous-episode-nav-link"
          >
            <span>
              ep. {previous.data.number}: {previous.data.title}
            </span>
          </a>
        )
      }
      {
        next && (
          <a
            href={"/episodes/" + next.data.number}
            class="next-episode-nav-link"
          >
            <span>
              ep. {next.data.number}: {next.data.title}
            </span>
          </a>
        )
      }
    </nav>
  </main>

  <Footer />
</Layout>

<script>
  document
    .querySelector(".copy-episode-link-action")
    ?.addEventListener("click", () => {
      navigator.clipboard.writeText(location.href);
      window.setTimeout(
        () => document.getElementById("copied-popover")?.hidePopover(),
        5000
      );
    });
</script>

<style>
  .episode-header {
    padding: 4rem 0 3rem;
    background: #3d3c40 linear-gradient(#161619, #3d3c40);
    color: var(--off-white);
    margin-bottom: 2rem;
  }

  .episode-header-content {
    width: var(--content-width);
    max-width: var(--max-width);
    margin: 0 auto;
    padding: 0 1rem;
  }

  .header-top {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
  }

  .episode-title-section {
    margin-top: 1rem;
  }

  .episode-title {
    font-size: 3.5rem;
    font-weight: 200;
    margin: 0.5rem 0 0 0;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    letter-spacing: -0.02em;
    line-height: 1.2;
  }

  .header-accent {
    width: 60px;
    height: 4px;
    background: var(--primary-color);
    border-radius: 2px;
    margin-top: 1rem;
  }

  main {
    display: grid;
    grid-template-areas: 
      "content sidebar"
      "extras sidebar"
      "nav nav";
    grid-template-columns: 1fr 300px;
    gap: 3rem;
    width: var(--content-width);
    max-width: var(--max-width);
    margin: 0 auto;
  }

  nav {
    width: var(--content-width);
    max-width: var(--max-width);
    margin: auto;
  }

  nav {
    margin-top: 3em;
  }

  audio {
    display: block;
    width: 100%;
    margin: 1em 0;
  }

  audio::-webkit-media-controls-enclosure {
    background: var(--primary-color);
    border-radius: 4px;
  }

  ul {
    margin: 0;
    padding-left: 1em;
  }

  strong {
    display: block;
  }

  [popover] {
    border: 1px solid var(--primary-color-dark);
    border-radius: 4px;
    box-shadow: 0 0 3px var(--primary-color-dark);

    &:popover-open {
      position: absolute;
      inset: unset;
    }
  }

  .header-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .episode-content {
    grid-area: content;
  }

  .episode-sidebar {
    grid-area: sidebar;
  }

  .episode-extras {
    grid-area: extras;
  }

  .episode-number-display {
    display: flex;
    justify-content: flex-start;
    margin-bottom: 1rem;
    color: var(--primary-color-light);
    font-size: 2rem;
    font-weight: 300;
    line-height: 1;
  }

  .episode-date {
    display: block;
    font-size: 1.1rem;
    font-weight: 400;
    color: var(--base-color-light);
    margin: 0 0 1rem 0;
    text-align: left;
  }

  .episode-teaser {
    font-size: 1.2rem;
    line-height: 1.6;
    margin: 0 0 2rem 0;
    color: var(--base-color-dark);
  }

  .episode-links {
    margin: 1.5rem 0;
  }
  .episode-links li {
    margin-bottom: 0.5rem;
  }

  .listen-section {
    margin-bottom: 1.5rem;
    padding: 1rem;
    background: var(--off-white);
    border-radius: 8px;
    border-left: 4px solid var(--primary-color);
  }
  .listen-section h3, .share-section h3 {
    margin-top: 0;
  }

  .listen-links {
    margin-top: 1rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .share-section {
    padding: 1rem;
    background: var(--off-white);
    border-radius: 8px;
    border-left: 4px solid var(--primary-color);
  }

  .share-actions, .listen-links {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    margin-top: 1rem;
  }

  .share-actions a,
  .listen-links a {
    text-decoration: none;
  }

  .listen-links img,
  .share-actions img {
    height: 1.25em;
    width: 1.25em;
    filter: none;
    display: inline-block;
    margin-right: 0.125em;
  }

  .copy-episode-link-action {
    background: none;
    border: none;
    padding: 0;
    cursor: pointer;
    font-size: inherit;
    font-family: inherit;
    color: var(--base-color-dark);
    opacity: 1;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .copy-episode-link-action:hover {
    color: var(--base-color-dark);
  }
  /* Not sure why the button ends up having a different flex positioning
  than the anchors, but this seems to adjust for it. */
  .copy-episode-link-action span {
    position: relative;
    left: -0.2em;
  }

  .listen-links a:hover span,
  .share-actions a:hover span,
  .copy-episode-link-action:hover span {
    text-decoration: underline;
  }

  .episode-description {
    max-width: 40em;
    margin-bottom: 0;
  }

  .episode-description {
    white-space: pre-line;
  }

  .episode-nav {
    grid-area: nav;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  [class$="episode-nav-link"] {
    display: inline-flex;
    align-items: center;
    gap: 0.35em;
    width: 33%;
    font-weight: 400;
    text-decoration: none;

    &::before,
    &::after {
      display: inline-block;
      vertical-align: 0.1em;
      font-weight: 500;
      font-size: 1.5em;
      font-family: monospace;
    }

    & span {
      display: -webkit-box;
      -webkit-box-orient: vertical;
      -webkit-line-clamp: 3;
      overflow: hidden;
    }
  }

  .previous-episode-nav-link::before {
    content: "\2190";
    margin-left: -0.85em;
  }

  .next-episode-nav-link {
    margin-left: auto;

    &::after {
      content: "\2192";
      margin-right: -0.85em;
    }
  }

  @media (max-width: 1024px) {
    main {
      grid-template-areas: 
        "content"
        "sidebar"
        "extras"
        "nav";
      grid-template-columns: 1fr;
      gap: 2rem;
      padding: 0 1rem;
    }
  }

  @media (max-width: 768px) {
    main {
      gap: 1.5rem;
      padding: 0 1rem;
    }

    .episode-title {
      font-size: 2rem;
    }
    .episode-number-display {
      font-size: 1.5rem;
    }

    .episode-header-content {
      padding: 0 1rem;
    }

    .episode-header {
      padding: 2rem 0 1.5rem;
    }
  }
</style>
